/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthImport } from './routes/_auth'
import { Route as IndexImport } from './routes/index'
import { Route as AuthIndexImport } from './routes/_auth/index'
import { Route as AuthDashboardIndexImport } from './routes/_auth/dashboard/index'
import { Route as AuthDashboardRoleIndexImport } from './routes/_auth/dashboard/$role/index'
import { Route as AuthDashboardRoleCommentsIndexImport } from './routes/_auth/dashboard/$role/comments/index'

// Create/Update Routes

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthIndexRoute = AuthIndexImport.update({
  path: '/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthDashboardIndexRoute = AuthDashboardIndexImport.update({
  path: '/dashboard/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthDashboardRoleIndexRoute = AuthDashboardRoleIndexImport.update({
  path: '/dashboard/$role/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthDashboardRoleCommentsIndexRoute =
  AuthDashboardRoleCommentsIndexImport.update({
    path: '/dashboard/$role/comments/',
    getParentRoute: () => AuthRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_auth/': {
      id: '/_auth/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/dashboard/': {
      id: '/_auth/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthDashboardIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/dashboard/$role/': {
      id: '/_auth/dashboard/$role/'
      path: '/dashboard/$role'
      fullPath: '/dashboard/$role'
      preLoaderRoute: typeof AuthDashboardRoleIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/dashboard/$role/comments/': {
      id: '/_auth/dashboard/$role/comments/'
      path: '/dashboard/$role/comments'
      fullPath: '/dashboard/$role/comments'
      preLoaderRoute: typeof AuthDashboardRoleCommentsIndexImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AuthRoute: AuthRoute.addChildren({
    AuthIndexRoute,
    AuthDashboardIndexRoute,
    AuthDashboardRoleIndexRoute,
    AuthDashboardRoleCommentsIndexRoute,
  }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/",
        "/_auth/dashboard/",
        "/_auth/dashboard/$role/",
        "/_auth/dashboard/$role/comments/"
      ]
    },
    "/_auth/": {
      "filePath": "_auth/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/dashboard/": {
      "filePath": "_auth/dashboard/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/dashboard/$role/": {
      "filePath": "_auth/dashboard/$role/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/dashboard/$role/comments/": {
      "filePath": "_auth/dashboard/$role/comments/index.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
